import com.shopping.domain.model.Product.Category;
import com.shopping.domain.model.valueObject.ID;
import java.time.LocalDate;

CREATE TABLE IF NOT EXISTS Products (
id              TEXT   AS ID          NOT NULL   PRIMARY KEY,
category        TEXT   AS Category    NOT NULL,
brand           TEXT                  NOT NULL,
name            TEXT                  NOT NULL,
description     TEXT                  NOT NULL,
price           REAL                  NOT NULL,
release_date    TEXT   AS LocalDate   NOT NULL,
creation_date   TEXT   AS LocalDate   NOT NULL
);

searchProducts:
SELECT * FROM (
    SELECT * FROM Products
    WHERE (category LIKE :searchCategory OR :searchCategory IS NULL) OR
    (name LIKE :searchName OR :searchName IS NULL) OR
    (brand LIKE :searchBrand OR :searchBrand IS NULL) OR
    (description LIKE :searchDescription OR :searchDescription IS NULL)
)
WHERE category IN :categories OR
brand IN :brands OR
(price == :min_price OR :min_price IS NULL) OR
(price == :max_price OR :max_price IS NULL)
LIMIT ? OFFSET ?;

getProducts:
SELECT * FROM Products
WHERE category IN :categories OR
brand IN :brands OR
(price >= :min_price OR :min_price IS NULL) OR
(price <= :max_price OR :max_price IS NULL)
LIMIT :limit OFFSET :offset;

getProductById:
SELECT * FROM Products
WHERE id == ?;

createProduct:
INSERT INTO Products (id, category, brand, name, description, price, release_date, creation_date)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

updateProductByID:
UPDATE Products
SET category = ?, brand = ?, name = ?, description = ?, price = ?, release_date = ?
WHERE id == ?;

deleteProductById:
DELETE FROM Products
WHERE id == ?;